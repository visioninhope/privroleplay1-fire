/* eslint-disable */
/**
 * Generated `api` utility.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.8.0.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  ApiFromModules,
  FilterApi,
  FunctionReference,
} from "convex/server";
import type * as characterCard from "../characterCard.js";
import type * as characterCustomization from "../characterCustomization.js";
import type * as characters from "../characters.js";
import type * as chats from "../chats.js";
import type * as constants from "../constants.js";
import type * as crons from "../crons.js";
import type * as crystals from "../crystals.js";
import type * as followUps from "../followUps.js";
import type * as helpers from "../helpers.js";
import type * as hides from "../hides.js";
import type * as http from "../http.js";
import type * as image from "../image.js";
import type * as images from "../images.js";
import type * as ingest_embed from "../ingest/embed.js";
import type * as llm from "../llm.js";
import type * as messages from "../messages.js";
import type * as models from "../models.js";
import type * as payments from "../payments.js";
import type * as personas from "../personas.js";
import type * as public from "../public.js";
import type * as r2 from "../r2.js";
import type * as random from "../random.js";
import type * as serve from "../serve.js";
import type * as speech from "../speech.js";
import type * as speeches from "../speeches.js";
import type * as stories from "../stories.js";
import type * as stripe from "../stripe.js";
import type * as translate from "../translate.js";
import type * as translation from "../translation.js";
import type * as users from "../users.js";

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * Usage:
 * ```js
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
declare const fullApi: ApiFromModules<{
  characterCard: typeof characterCard;
  characterCustomization: typeof characterCustomization;
  characters: typeof characters;
  chats: typeof chats;
  constants: typeof constants;
  crons: typeof crons;
  crystals: typeof crystals;
  followUps: typeof followUps;
  helpers: typeof helpers;
  hides: typeof hides;
  http: typeof http;
  image: typeof image;
  images: typeof images;
  "ingest/embed": typeof ingest_embed;
  llm: typeof llm;
  messages: typeof messages;
  models: typeof models;
  payments: typeof payments;
  personas: typeof personas;
  public: typeof public;
  r2: typeof r2;
  random: typeof random;
  serve: typeof serve;
  speech: typeof speech;
  speeches: typeof speeches;
  stories: typeof stories;
  stripe: typeof stripe;
  translate: typeof translate;
  translation: typeof translation;
  users: typeof users;
}>;
export declare const api: FilterApi<
  typeof fullApi,
  FunctionReference<any, "public">
>;
export declare const internal: FilterApi<
  typeof fullApi,
  FunctionReference<any, "internal">
>;
